<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BoardMapper">

	<!-- DB컬럼과 VO필드명이 다른 경우 처리 방법 -->
	<!--<resultMap id="BoardResultMap"  type="com.spring.myapp.board.model.BoardVO">-->
	<resultMap id="BoardResultMap" type="BoardVO">
		<id property="boardNo" column="board_no" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="writer" column="writer" />
		<result property="regDate" column="reg_date" />
		<result property="viewCnt" column="view_cnt" />
		<result property="replyCnt" column="reply_cnt"/>
	</resultMap>

	<!-- 게시물 등록 -->
	<insert id="insert">
		INSERT INTO mvc_board (title, content, writer) 
		VALUES (#{title}, #{content}, #{writer})     
	</insert>
	
	<!-- 단일 게시물 조회 -->
	<select id="getArticle" resultMap="BoardResultMap">
		SELECT * FROM mvc_board 
		WHERE board_no = #{boardNo}
	</select>

	<!-- 게시물 수정 -->
	<update id="update">
		UPDATE mvc_board SET title = #{title}, content = #{content}
		WHERE board_no = #{boardNo}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delete">
		DELETE FROM mvc_board
		WHERE board_no=#{boardNo}
	</delete>
	
	<!-- 모든 게시글 조회 -->
	<!-- xml에서 SQL구문 작성시 연산자기호와 문자열을 구분할 수 없을 경우 
		<![CDATA]]> 구문안에 SQL을 작성하면 연산자 기호를 문자열로 처리할 수 있습니다. -->
	<select id="getAllArticles" resultMap="BoardResultMap">
		<![CDATA[
		SELECT * FROM mvc_board
		WHERE board_no > 0
		ORDER BY board_no DESC
		]]>
	</select>
	
	<!-- 페이지별 게시물 조회 -->
	<select id="listPaging" resultMap="BoardResultMap">
		SELECT * FROM mvc_board ORDER BY board_no DESC LIMIT #{pageStart}, #{countPerPage}
	</select>
	<!-- 총 게시물 수 가져오기 -->
	<select id="countArticles" resultType="int">
		SELECT count(board_no) FROM mvc_board
	</select>
	<!-- 게시물 목록 검색하기(동적SQL) -->
	<select id="listSearch" resultMap="BoardResultMap">
		SELECT *
		FROM mvc_board
		<include refid="search"/>
		ORDER BY board_no DESC
		LIMIT #{pageStart}, #{countPerPage}
	</select>
	
	<!-- 검색된 게시물 총 게시물 수 가져오기(동적SQL) -->
	<select id="countSearchArticles" resultType="int">
		SELECT count(*)
		FROM mvc_board
		<include refid="search"/>
	</select>
	
	<select id ="updateViewCnt">
		UPDATE mvc_board
		SET view_cnt = view_cnt+1
		WHERE board_no = #{boardNo}
	</select>
	
	<update id ="updateReplyCnt">
		UPDATE mvc_board
		SET reply_cnt = reply_cnt + #{count}
		WHERE board_no = #{boardNo}
	</update>
	<!-- 중복되는 동적SQL구문 처리(include) -->
	<sql id="search">
		<if test="condition != '' || condition != null">
			<if test="condition == 'title'">
			WHERE title LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="condition == 'writer'">
			WHERE writer LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="condition == 'content'">
			WHERE content LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="condition == 'titlecontent'">
			WHERE content LIKE CONCAT('%', #{keyword}, '%') OR title LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</if>
	</sql>
	
	<!-- ======================================== Depreciated =============================================== -->
	
	<!-- 제목으로 게시물 목록 검색하기 -->
	<select id="listSearchByTitle" resultMap="BoardResultMap">
		SELECT * FROM mvc_board
		WHERE title LIKE CONCAT('%', #{keyword}, '%')
		ORDER BY board_no DESC
		LIMIT #{pageStart}, #{countPerPage}
	</select>
	
	<!-- 검색 결과 게시물 수를 가져오기 (제목)-->
	<select id="countSearchedArticles" resultType="int">
		SELECT count(*)
		FROM mvc_board
		WHERE title LIKE CONCAT('%', #{keyword}, '%')
	</select>
	
	<!-- 작성자로 게시물 목록 검색하기 -->
	<select id="listSearchByWriter" resultMap="BoardResultMap">
		SELECT * FROM mvc_board
		WHERE writer LIKE CONCAT('%', #{keyword}, '%')
		ORDER BY board_no DESC
		LIMIT #{pageStart}, #{countPerPage}
	</select>
	<!-- 검색결과 게시물 수 가져오기(작성자) -->
	<select id="countSearchedArticlesByWriter" resultType="int">
		SELECT count(*) 
		FROM mvc_board 
		WHERE writer LIKE CONCAT('%', #{keyword}, '%')
	</select>
</mapper>







